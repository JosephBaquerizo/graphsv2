import styles from "../styles/Weather.module.css";
import Head from 'next/head'
import { StoreContext, ACTION_TYPES } from "../store/store-context";
import { useContext, useEffect } from "react";
import { getAverage, getMax, getMin, getLatest, range, capitalizeFunc, stuctureResponse  } from "../utils/capitalizeFunc";
import Indicator from "../components/indicator/indicator";
import IndicatorContainer from "../components/indicatorContainer/indicatorContainer";
import { BsFillArrowDownCircleFill, BsFillArrowUpCircleFill, BsAlignCenter } from "react-icons/bs";
import MainIndicator from "../components/mainIndicator/mainIndicator";
import { CgLastpass } from "react-icons/cg";
import Graph from "../components/graph/graph";
import DoughnutGraph from "../components/doughnut/doughnut";


export default function Home() {

    const { state, dispatch } = useContext(StoreContext);


    useEffect(() => {
        
        const getWeatherData = async () => {
            const data = await fetch("/api/getWeatherInfo?lat=22&lon=99");
            const dataJSON = await data.json();
            const restructuredResponse = stuctureResponse(dataJSON);

            dispatch({
              type: ACTION_TYPES.SET_WEATHER_DATA,
              payload: { weatherData: restructuredResponse }
            })
          };
  
        getWeatherData();

    }, [])
    

    return (
        <div className={state.sidebar ? styles.containerRetracted : styles.containerExpanded}>
            <Head>
                <title>Weather App</title>
                <meta name="description" content="Generated by Joseph Baquerizo" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>{capitalizeFunc(state.infoContent)}</h1>
                <h3 className={styles.subtitle}>Overall Statistics</h3>
                {
                    state.weatherData
                    ?
                    <section className={styles.overall}>
                        <div className={styles.innerOverall}>
                            <div className={styles.pairGraph}>
                                <MainIndicator />
                                <DoughnutGraph visibility={state.weatherData.visibility}/>
                            </div>
                            <Graph 
                                data={state.weatherData["temperature"]["data"]}
                                bColor={state.weatherData["".concat(state.infoContent)]["bColor"]}
                                bgColor={state.weatherData["".concat(state.infoContent)]["bgColor"]}
                                labels={range(state.weatherData.cnt)}
                                label={state.weatherData["".concat(state.infoContent)]["label"]}
                            />
                        </div>
                    </section>
                    :
                    <p>No Data</p>
                }
                <h3 className={styles.subtitle}>Analytics Overview</h3>
                {
                    state.weatherData
                    ?
                    <section className={styles.content}>
                        <IndicatorContainer>
                            <Indicator 
                                icon={<BsAlignCenter className={styles.iconGreen}/>} 
                                color="green" 
                                title="average" 
                                value={getAverage(state.weatherData["".concat(state.infoContent)]["data"])} 
                                units={state.weatherData["".concat(state.infoContent)]["units"]} 
                            />
                            <Indicator 
                                icon={<BsFillArrowUpCircleFill className={styles.iconRed}/>} 
                                color="red" 
                                title="max" 
                                value={getMax(state.weatherData["".concat(state.infoContent)]["data"])} 
                                units={state.weatherData["".concat(state.infoContent)]["units"]} 
                            />
                            <Indicator 
                                icon={<BsFillArrowDownCircleFill className={styles.iconBlue}/>} 
                                color="blue" 
                                title="min" 
                                value={getMin(state.weatherData["".concat(state.infoContent)]["data"])} 
                                units={state.weatherData["".concat(state.infoContent)]["units"]} 
                            />
                            <Indicator 
                                icon={<CgLastpass className={styles.iconPurple}/>} 
                                color="purple" 
                                title="latest" 
                                value={getLatest(state.weatherData["".concat(state.infoContent)]["data"])} 
                                units={state.weatherData["".concat(state.infoContent)]["units"]} 
                            />
                        </IndicatorContainer>
                    </section>
                    :
                    <p>No data</p>
                }
            </main>
        </div>
    )
}